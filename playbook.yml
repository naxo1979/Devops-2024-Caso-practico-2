---
- name: deploy httpd container
  hosts: all
  become: true
  gather_facts: false
#  vars:
#    webroot: "/webroot"
#    login_acr: az login --service-principal -u {{ ignacio.palacio025@comunidadunir.net }} -pp {{acioE2AFPala_ }} --tenant {{ 899789dc-202f-44b4-8472-a6d40f9eb440 }}
#    password_acr: az acr credential show --name UnirContainerIPY --query passwords[0].value
#  vars_file:
#    - /etc/containers/auth.json

  tasks:

    - name: Actualizar índice de paquetes
      apt:
        update_cache: yes

    - name: podman installed
      ansible.builtin.apt:
        name: podman
        state: present
  
        
    - name: k8s installed
      ansible.builtin.apt:
        name: kubernetes
        state: present
        

    - name: ansible installed
      ansible.builtin.apt:
        name: ansible
        state: present

    - name: python3 installed
      ansible.builtin.apt:
        name: python3
        state: present

#    - name: agregar repo 
#      ansible.builtin.apt_repository:
#        repo: deb https://ppa.launchpadcontent.net/ansible/ansible/ubuntu/pool/main/a/ansible-core/ ansible ansible
#        state: present
         
#    - name: Update apt-get repo and cache
#      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
#      
#    - name: ansible-core installed
#      ansible.builtin.apt:
#        name: ansible
#        state: present

#    - name: ansible-core installed
#      ansible.builtin.command:
#        cmd:  
#          - sudo apt update
#          - sudo apt install software-properties-common
#          - sudo add-apt-repository --yes --update ppa:ansible/ansible
#          - sudo apt install ansible
#      become: true
 

# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_image_module.html

# Obtengo la imagen httpd desde docker

    - name: pull image httpd
      containers.podman.podman_image:
        name: docker.io/httpd
        pull: true

# Obtengo la imagen nginx desde docker

    - name: pull image Nginx
      containers.podman.podman_image:
        name: docker.io/nginx
        pull: true

# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_tag_module.html

# Agregamos el tag "casopractico2" a la imagen httpd

    - name: Tag image httpd
      containers.podman.podman_tag:
        image: docker.io/httpd
        target_names:
          - httpd:casopractico2

# Agregamos el tag "casopractico2" a la imagen nginx

    - name: Tag image nginx
      containers.podman.podman_tag:
        image: docker.io/nginx
        target_names:
          - nginx:casopractico2




# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_image_module.html

    - name: Push httpd image ACR
      containers.podman.podman_image:
       name: httpd:casopractico2
       push: true
#       auth_file: /etc/containers/auth.json
       
       username : UnirContainerIPY
       password: 0uJ+fparp1JchH5BG4DF+9FrUEstw38+GH3AJhp30M+ACRAS4sn3
       push_args:
        dest: "unircontaineripy.azurecr.io/app_podman"

    - name: Push nginx image ACR
      containers.podman.podman_image:
       name: nginx:casopractico2
       push: true
#       auth_file: /etc/containers/auth.json
       
       username : UnirContainerIPY
       password: 0uJ+fparp1JchH5BG4DF+9FrUEstw38+GH3AJhp30M+ACRAS4sn3
       push_args:
        dest: "unircontaineripy.azurecr.io/app_aks"



# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_image_info_module.html

    - name: Recopilar información de todas las imagenes
      containers.podman.podman_image_info:
      register: all_images_info

    - debug:
        var: all_images_info

# https://docs.ansible.com/ansible/latest/collections/azure/azcollection/index.html

#    - name: Login ACR
#      azure.azcollection.azure_rm_adpassword:
#        client_id: ignacio.palacio025@comunidadunir.net
#        secret : acioE2AFPala_
#        tenant : 899789dc-202f-44b4-8472-a6d40f9eb440
        
    - name: Autenticar contra ACR
      containers.podman.podman_login:
#       authfile: /etc/containers/auth.json
        registry: "unircontaineripy.azurecr.io"
        username : "UnirContainerIPY"
        password: 0uJ+fparp1JchH5BG4DF+9FrUEstw38+GH3AJhp30M+ACRAS4sn3


# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_container_module.html

    - name: Levantar contenedor httpd con podman
      containers.podman.podman_container:
       name: httpd
       image: "unircontaineripy.azurecr.io/app_podman/httpd:casopractico2"
       state: started
       ports: "8080:80"
       
       

#    - name: Crear PersistentVolumeClaim en Kubernetes
#      k8s:
#        kubeconfig: ~/.kube/config
#        state: present
#        definition:
#          apiVersion: v1
#          kind: PersistentVolumeClaim
#          metadata:
#            name: my-pvc
#          spec:
#            accessModes:
#              - ReadWriteOnce
#            resources:
#              requests:
#                storage: 1Gi
#
#    - name: Crear PersistentVolume en Kubernetes
#      k8s:
#        kubeconfig: ~/.kube/config
#        state: present
#        definition:
#          apiVersion: v1
#          kind: PersistentVolume
#          metadata:
#            name: my-pv
#          spec:
#            capacity:
#              storage: 1Gi
#            accessModes:
#              - ReadWriteOnce
#            azureDisk:
#              kind: Managed
#              diskName: discoazuregestionado
#              diskURI: /subscriptions/cda335bf-ab3b-46d2-a3a0-df67c4f922c3/resourceGroups/rg_cp2/providers/Microsoft.Compute/disks/discoazuregestionado
#    - name: ingress nginx en k8s
#      k8s:
#        kubeconfig: ~/.kube/config
#        state: present
#        definition:
#          apiVersion: v1
#          kind: Service
#          metadata:
#            name: "{{ app.frontend.name }}"
#            namespace: "{{ app_namespace }}"
#          spec:
#            type: LoadBalancer
#            ports:
#            - port: 8080
#            selector:
#              app: "{{ app.frontend.name }}"
